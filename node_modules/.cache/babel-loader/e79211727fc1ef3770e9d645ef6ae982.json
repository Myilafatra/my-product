{"ast":null,"code":"import _classCallCheck from \"/home/miarisoa/Documents/my-product/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/miarisoa/Documents/my-product/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/miarisoa/Documents/my-product/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/miarisoa/Documents/my-product/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/miarisoa/Documents/my-product/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/miarisoa/Documents/my-product/src/Post.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\nvar Post =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Post, _Component);\n\n  function Post() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Post);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Post)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.submit = function () {\n      return confirmAlert({\n        customUI: function customUI(_ref) {\n          var onClose = _ref.onClose;\n          return React.createElement(\"div\", {\n            className: \"custom-ui edit\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 12\n            },\n            __self: this\n          }, React.createElement(\"h4\", {\n            className: 'h4',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 13\n            },\n            __self: this\n          }, \"Suppression Produit\"), React.createElement(\"p\", {\n            className: 'p',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 14\n            },\n            __self: this\n          }, _this.props.post.produit), React.createElement(\"button\", {\n            className: 'boutton1',\n            onClick: function onClick() {\n              _this.props.dispatch({\n                type: 'DELETE_POST',\n                id: _this.props.post.id\n              });\n\n              onClose();\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 15\n            },\n            __self: this\n          }, \"OUI\"), React.createElement(\"button\", {\n            className: 'boutton2',\n            onClick: onClose,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 19\n            },\n            __self: this\n          }, \"NON\"));\n        }\n      });\n    };\n\n    _this.handleSubmit = function (jj) {\n      //e.preventDefault();\n      // //const newNom = this.getNom.value;\n      // const newPrenom = this.getPrenom.value;\n      // const data = {\n      //   //newNom,\n      //   newPrenom\n      // }\n      //this.props.dispatch({ type: 'UPDATE', id: this.props.post.id, data: jj })\n      //console.log('jj ==>', jj)\n      var test = _this.props.posts;\n      var longT = test.length;\n      var tab = test[longT - 1];\n      var som = tab.mme;\n      console.log('jj ==>', som);\n    };\n\n    _this.update = function () {\n      return confirmAlert({\n        customUI: function customUI(_ref2) {\n          var onClose = _ref2.onClose;\n          //var data = {this.props.post.prenom}\n          return React.createElement(\"div\", {\n            className: \"custom-ui\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }, React.createElement(\"form\", {\n            className: 'edit',\n            onSubmit: function onSubmit(event) {\n              event.preventDefault();\n\n              if (isNaN(_this.newPrenom.value)) {\n                var err1 = document.getElementById('erreur1');\n                err1.innerHTML = 'Entrer un nombre';\n              } else {\n                _this.handleSubmit(_this.newPrenom.value);\n\n                onClose();\n              }\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"text\",\n            className: 'input',\n            ref: function ref(input) {\n              return _this.newPrenom = input;\n            },\n            defaultValue: _this.props.post.prenom,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }), React.createElement(\"p\", {\n            id: \"erreur1\",\n            className: 'erreur1',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          }), React.createElement(\"button\", {\n            className: 'boutton3 nom' //  onClick={() => {\n            // \t if\t(isNaN(this.newPrenom.value)){\n            // \t\t//const data = this.newPrenom.value\n            // \t\t//console.log('data = ', data)\n            // \t\t//this.handleSubmit(this.newPrenom.value) \n            // \t\t//var jj = 12\n            // \t\tconsole.log('doucosud');\n            // \t\t}else\t{\n            // \t\t\tconsole.log('dd');\n            // \t\t}\n            // \t }}\n            // \t//this.props.dispatch({type:'EDIT_POST',id:this.props.post.id });\n            // \tthis.props.dispatch({ type: 'EDIT_POST', id: this.props.post.id,data:  this.newPrenom.value})\n            // \tconsole.log(this.newPrenom.value)\n            // \tonClose();\n            // }}\n            ,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          }, \"OK\"), React.createElement(\"button\", {\n            onClick: onClose,\n            className: 'boutton4 ',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          }, \"Annuler\")));\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Post, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, this.props.post.nb), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, this.props.post.produit), React.createElement(\"td\", {\n        className: 'prix',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, this.props.post.prenom, this.handleSubmit()), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.submit();\n        },\n        className: \"btn btn-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"X\"), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.update();\n        },\n        className: 'ajout btn btn-success',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \" Edit\"))));\n    }\n  }]);\n\n  return Post;\n}(Component);\n\nvar somme = function somme(state) {\n  return {};\n};\n\nexport default connect(somme)(Post);","map":{"version":3,"sources":["/home/miarisoa/Documents/my-product/src/Post.js"],"names":["React","Component","connect","confirmAlert","Post","submit","customUI","onClose","props","post","produit","dispatch","type","id","handleSubmit","jj","test","posts","longT","length","tab","som","mme","console","log","update","event","preventDefault","isNaN","newPrenom","value","err1","document","getElementById","innerHTML","input","prenom","nb","somme","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport { confirmAlert } from 'react-confirm-alert'; \nimport 'react-confirm-alert/src/react-confirm-alert.css'\nclass Post extends Component {\n\n\t\n  submit = () => (\n\t\tconfirmAlert({\n\t\tcustomUI: ({ onClose }) => {\n\t\t\treturn (\n\t\t\t\t<div className='custom-ui edit'>\n\t\t\t\t\t<h4 className={'h4'}>Suppression Produit</h4>\n\t\t\t\t\t<p className={'p'}>{this.props.post.produit }</p>\n\t\t\t\t\t<button className={'boutton1'} onClick={() => {\n\t\t\t\t\t\t\tthis.props.dispatch({type:'DELETE_POST',id:this.props.post.id})\n\t\t\t\t\t\t\tonClose()\n\t\t\t\t\t}}>OUI</button>\n\t\t\t\t\t<button className={'boutton2'}onClick={onClose}>NON</button>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t}))\n\nhandleSubmit = (jj) => {\n  //e.preventDefault();\n  // //const newNom = this.getNom.value;\n  // const newPrenom = this.getPrenom.value;\n  // const data = {\n  //   //newNom,\n  //   newPrenom\n\t// }\n\t\n\t//this.props.dispatch({ type: 'UPDATE', id: this.props.post.id, data: jj })\n\t//console.log('jj ==>', jj)\n\n\tvar test = this.props.posts;\n\tvar longT = test.length;\n\tvar tab = test[longT-1];\n\tvar som = tab.mme\n\tconsole.log('jj ==>', som)\n}\n\n\n  update = () => (\n\t\tconfirmAlert({\n\t\t\tcustomUI: ({ onClose }) => {\n\t\t\t\t//var data = {this.props.post.prenom}\n\n\t\t\t\n\t\t\t\treturn (\n\t\t\t\t\t<div className=\"custom-ui\" >\n\t\t\t\t\t<form className={'edit'}  \n\t\t\t\t\t\tonSubmit={event => {\n\t\t\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t\t\t\tif(isNaN(this.newPrenom.value)){\n\t\t\t\t\t\t\t\t\t\tvar err1 = document.getElementById('erreur1')\n\t\t\t\t\t\t\t\t\t\terr1.innerHTML = 'Entrer un nombre'\n\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\t\tthis.handleSubmit(this.newPrenom.value)\n\t\t\t\t\t\t\t\t\t\tonClose();\n\t\t\t\t\t\t\t\t}}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<input type='text' className={'input'} ref={(input)=>this.newPrenom = input }defaultValue={this.props.post.prenom}  />\n\t\t\t\t\t\t<br/>\n\n\t\t\t\t\t\t<p id='erreur1' className={'erreur1'}></p>\n\t\t\t\t\t\t<button className={'boutton3 nom'}\n\n\t\t\t\t\t\t\t//  onClick={() => {\n\t\t\t\t\t\t\t// \t if\t(isNaN(this.newPrenom.value)){\n\t\t\t\t\t\t\t// \t\t//const data = this.newPrenom.value\n\t\t\t\t\t\t\t// \t\t//console.log('data = ', data)\n\t\t\t\t\t\t\t// \t\t//this.handleSubmit(this.newPrenom.value) \n\t\t\t\t\t\t\t// \t\t//var jj = 12\n\t\t\t\t\t\t\t// \t\tconsole.log('doucosud');\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// \t\t}else\t{\n\t\t\t\t\t\t\t// \t\t\tconsole.log('dd');\n\t\t\t\t\t\t\t// \t\t}\n\t\t\t\t\t\t\t// \t }}\n\t\t\t\t\t\t\t// \t//this.props.dispatch({type:'EDIT_POST',id:this.props.post.id });\n\t\t\t\t\t\t\t// \tthis.props.dispatch({ type: 'EDIT_POST', id: this.props.post.id,data:  this.newPrenom.value})\n\t\t\t\t\t\t\t// \tconsole.log(this.newPrenom.value)\n\t\t\t\t\t\t\t// \tonClose();\n\t\t\t\t\t\t\t// }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tOK\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button onClick={onClose} className={'boutton4 '}>Annuler</button>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\t\t})\n\t)\n  render() {\n  return (\n\n\t\t<tbody>\n      <tr>\n        <td>{this.props.post.nb}</td>\n        <td>{this.props.post.produit }</td>\n        <td className={'prix'}>{this.props.post.prenom}{this.handleSubmit()}</td>\n        <td> \n\t\t<button onClick={()=>this.submit() } className={\"btn btn-danger\"} >X</button>\n\t\t<button onClick={()=>this.update()} className={'ajout btn btn-success'}> Edit</button>\n\t\t\t\t\t{/* {this.props.posts.map((post) => (\n\t\t\t<div key={post.id}>\n\t\t\t\t {post.editing ? <EditComponent post={post} key={post.id} /> : <Post post={post}\n    key={post.id} />}\n\t\t\t</div>\n\t))} */}\n\t\t\t\t\t{/* <button\n       onClick={()=>this.props.dispatch({type:'EDIT_POST',id:this.props.post.id})}>\n       Edit</button> */}\n\t\t\t\t\t</td>        \n      </tr>\n\t\t</tbody>\n     \n\n\t\t\n  \n  );\n }\n}\n\nconst somme = (state) => {\n    return  {\n\t\t\n    }\n}\nexport default connect(somme)(Post);"]},"metadata":{},"sourceType":"module"}