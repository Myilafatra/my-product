{"ast":null,"code":"import _objectSpread from \"/home/miarisoa/Documents/my-product/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\nvar postReducer = function postReducer() {\n  var State = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_POST':\n      return State.concat([action.data]);\n\n    case 'DELETE_POST':\n      return State.filter(function (post) {\n        return post.id !== action.id;\n      });\n    // case 'EDIT_POST':\n    //     return State.map((post)=>post.id === action.id ? {...post,editing:!post.editing}:post)\n\n    case 'UPDATE':\n      return State.map(function (post) {\n        if (post.id === action.id) {\n          return _objectSpread({}, post, {\n            prenom: action.data.newPrenom,\n            editing: !post.editing\n          });\n        } else return post;\n      });\n\n    default:\n      return State;\n  }\n};\n\nexport default postReducer;","map":{"version":3,"sources":["/home/miarisoa/Documents/my-product/src/reducer/postReducer.js"],"names":["postReducer","State","action","type","concat","data","filter","post","id","map","prenom","newPrenom","editing"],"mappings":";;AAAA,IAAMA,WAAW,GAAG,SAAdA,WAAc,GAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACxC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,UAAL;AACI,aAAOF,KAAK,CAACG,MAAN,CAAa,CAACF,MAAM,CAACG,IAAR,CAAb,CAAP;;AACJ,SAAK,aAAL;AACI,aAAOJ,KAAK,CAACK,MAAN,CAAa,UAACC,IAAD;AAAA,eAAQA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACM,EAA3B;AAAA,OAAb,CAAP;AACJ;AACA;;AACA,SAAK,QAAL;AACI,aAAOP,KAAK,CAACQ,GAAN,CAAU,UAACF,IAAD,EAAQ;AACvB,YAAGA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACM,EAAtB,EAA0B;AACxB,mCACMD,IADN;AAEGG,YAAAA,MAAM,EAACR,MAAM,CAACG,IAAP,CAAYM,SAFtB;AAGGC,YAAAA,OAAO,EAAE,CAACL,IAAI,CAACK;AAHlB;AAKD,SAND,MAMO,OAAOL,IAAP;AACR,OARM,CAAP;;AASJ;AACI,aAAON,KAAP;AAlBR;AAoBH,CArBD;;AAuBA,eAAeD,WAAf","sourcesContent":["const postReducer = (State = [], action ) =>{\n    switch(action.type){\n        case 'ADD_POST':\n            return State.concat([action.data]);\n        case 'DELETE_POST':\n            return State.filter((post)=>post.id !== action.id);\n        // case 'EDIT_POST':\n        //     return State.map((post)=>post.id === action.id ? {...post,editing:!post.editing}:post)\n        case 'UPDATE':\n            return State.map((post)=>{\n              if(post.id === action.id) {\n                return {\n                   ...post,\n                   prenom:action.data.newPrenom,\n                   editing: !post.editing\n                }\n              } else return post;\n            })    \n        default:\n            return State;\n    }\n}\n\nexport default postReducer"]},"metadata":{},"sourceType":"module"}