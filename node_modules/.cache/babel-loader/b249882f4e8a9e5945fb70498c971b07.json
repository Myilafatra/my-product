{"ast":null,"code":"import _classCallCheck from \"/home/miarisoa/Documents/my-product/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/miarisoa/Documents/my-product/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/miarisoa/Documents/my-product/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/miarisoa/Documents/my-product/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/miarisoa/Documents/my-product/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/miarisoa/Documents/my-product/src/PostForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nvar PostForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PostForm, _Component);\n\n  function PostForm() {\n    var _this;\n\n    _classCallCheck(this, PostForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PostForm).call(this));\n\n    _this.handleSubmit = function (e) {\n      if (isNaN(_this.getPrenom.value)) {\n        var maVariable = 'Not a Number!';\n        document.getElementById(\"mavar\").textContent = maVariable;\n        return console.log('Not a Number!');\n      } else {\n        e.preventDefault();\n\n        _this.setState({\n          nb: _this.state.nb + 1\n        });\n\n        var nom = _this.getNom.value;\n        var prenom = _this.getPrenom.value;\n        var produit = nom.charAt(0).toUpperCase() + nom.substring(1).toLowerCase();\n        var data = {\n          id: new Date(),\n          nb: _this.state.nb,\n          produit: produit,\n          prenom: prenom,\n          editing: false\n        };\n\n        _this.props.dispatch({\n          type: 'ADD_POST',\n          data: data\n        });\n\n        _this.getNom.value = '';\n        _this.getPrenom.value = '';\n      }\n    };\n\n    _this.state = {\n      nb: 0\n    };\n    return _this;\n  }\n\n  _createClass(PostForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"center\", {\n        className: \"form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        className: 'nom',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Produit\"), React.createElement(\"input\", {\n        required: true,\n        type: \"text\",\n        ref: function ref(input) {\n          return _this2.getNom = input;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Prix\"), React.createElement(\"input\", {\n        required: true,\n        type: \"text\",\n        ref: function ref(input) {\n          return _this2.getPrenom = input;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Ar\"), React.createElement(\"button\", {\n        className: 'ajout btn btn-primary',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Ajouter\"), React.createElement(\"p\", {\n        name: \"mavar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return PostForm;\n}(Component);\n\nexport default connect()(PostForm);","map":{"version":3,"sources":["/home/miarisoa/Documents/my-product/src/PostForm.js"],"names":["React","Component","connect","PostForm","handleSubmit","e","isNaN","getPrenom","value","maVariable","document","getElementById","textContent","console","log","preventDefault","setState","nb","state","nom","getNom","prenom","produit","charAt","toUpperCase","substring","toLowerCase","data","id","Date","editing","props","dispatch","type","input"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;;IAEMC,Q;;;;;AAEF,sBAAc;AAAA;;AAAA;;AACV;;AADU,UAMdC,YANc,GAMC,UAACC,CAAD,EAAO;AAClB,UAAIC,KAAK,CAAC,MAAKC,SAAL,CAAeC,KAAhB,CAAT,EAAiC;AAC9B,YAAIC,UAAU,GAAG,eAAjB;AACCC,QAAAA,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,WAAjC,GAA+CH,UAA/C;AACA,eAAOI,OAAO,CAACC,GAAR,CAAY,eAAZ,CAAP;AACH,OAJD,MAKA;AACIT,QAAAA,CAAC,CAACU,cAAF;;AACA,cAAKC,QAAL,CAAc;AACbC,UAAAA,EAAE,EAAG,MAAKC,KAAL,CAAWD,EAAX,GAAgB;AADR,SAAd;;AAIA,YAAME,GAAG,GAAG,MAAKC,MAAL,CAAYZ,KAAxB;AACA,YAAMa,MAAM,GAAG,MAAKd,SAAL,CAAeC,KAA9B;AACA,YAAMc,OAAO,GAAGH,GAAG,CAACI,MAAJ,CAAW,CAAX,EAAcC,WAAd,KAA8BL,GAAG,CAACM,SAAJ,CAAc,CAAd,EAAiBC,WAAjB,EAA9C;AAEA,YAAMC,IAAI,GAAG;AACTC,UAAAA,EAAE,EAAE,IAAIC,IAAJ,EADK;AAETZ,UAAAA,EAAE,EAAG,MAAKC,KAAL,CAAWD,EAFP;AAGTK,UAAAA,OAAO,EAAPA,OAHS;AAITD,UAAAA,MAAM,EAANA,MAJS;AAKTS,UAAAA,OAAO,EAAC;AALC,SAAb;;AAOA,cAAKC,KAAL,CAAWC,QAAX,CAAoB;AAChBC,UAAAA,IAAI,EAAC,UADW;AAEhBN,UAAAA,IAAI,EAAJA;AAFgB,SAApB;;AAIA,cAAKP,MAAL,CAAYZ,KAAZ,GAAoB,EAApB;AACA,cAAKD,SAAL,CAAeC,KAAf,GAAuB,EAAvB;AACH;AAEJ,KArCa;;AAEV,UAAKU,KAAL,GAAa;AACTD,MAAAA,EAAE,EAAE;AADK,KAAb;AAFU;AAKb;;;;6BAiCO;AAAA;;AACJ,aACI;AAAQ,QAAA,SAAS,EAAE,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,QAAQ,EAAE,KAAKb,YAArB;AAAmC,QAAA,SAAS,EAAE,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAO,QAAA,QAAQ,MAAf;AAAgB,QAAA,IAAI,EAAC,MAArB;AAA4B,QAAA,GAAG,EAAE,aAAC8B,KAAD;AAAA,iBAAS,MAAI,CAACd,MAAL,GAAcc,KAAvB;AAAA,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,EAII;AAAO,QAAA,QAAQ,MAAf;AAAgB,QAAA,IAAI,EAAC,MAArB;AAA4B,QAAA,GAAG,EAAE,aAACA,KAAD;AAAA,iBAAS,MAAI,CAAC3B,SAAL,GAAiB2B,KAA1B;AAAA,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,EAMI;AAAQ,QAAA,SAAS,EAAE,uBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANJ,EAOI;AAAG,QAAA,IAAI,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,CADJ,CADJ;AAeH;;;;EAxDkBjC,S;;AA0DvB,eAAeC,OAAO,GAAGC,QAAH,CAAtB","sourcesContent":["import React, { Component } from 'react'\nimport {connect} from 'react-redux'\n\nclass PostForm extends Component{\n    \n    constructor() {\n        super()\n        this.state = {\n            nb: 0,\n        }\n    }\n    handleSubmit = (e) => {\n        if (isNaN(this.getPrenom.value)) {\n           var maVariable = 'Not a Number!'\n            document.getElementById(\"mavar\").textContent = maVariable;\n            return(console.log('Not a Number!') );\n        }else\n        {\n            e.preventDefault();\n            this.setState({\n             nb : this.state.nb + 1\n            })\n            \n            const nom = this.getNom.value;\n            const prenom = this.getPrenom.value;\n            const produit = nom.charAt(0).toUpperCase() + nom.substring(1).toLowerCase()\n            \n            const data = {\n                id: new Date(),            \n                nb : this.state.nb,\n                produit,\n                prenom,\n                editing:false\n            }\n            this.props.dispatch({\n                type:'ADD_POST',\n                data\n            });\n            this.getNom.value = '';\n            this.getPrenom.value = '';\n        }\n        \n    }\n    render(){\n        return(\n            <center className={\"form\"} >\n                <form onSubmit={this.handleSubmit} className={'nom'}>\n                    <label>Produit</label>\n                    <input required type='text' ref={(input)=>this.getNom = input} />\n                    <label>Prix</label>\n                    <input required type='text' ref={(input)=>this.getPrenom = input} />\n                    <label>Ar</label>\n                    <button className={'ajout btn btn-primary'}  >Ajouter</button>\n                    <p name='mavar'>\n\n                    </p>\n                </form>\n            </center>\n        )\n    }\n}\nexport default connect()(PostForm)"]},"metadata":{},"sourceType":"module"}